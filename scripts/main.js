(()=>{"use strict";function e(e){setTimeout(e,0)}function t(e,t){return Math.floor(e+Math.random()*(t+1-e))}function n(e){let n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const s=n?e:[...e];for(let e=s.length-1;e>0;e-=1){const n=s[e],r=t(0,e),a=s[r];s[r]=n,s[e]=a}return s}class s{constructor(t){let{kind:n,imageUrl:s="./images/logotypes/".concat(n,".png"),isOpen:r=!1}=t;this._kind=n,this._isOpen=r;const a='\n      <div class="'.concat(this.isOpen?"card card_open":"card",'">\n        <div class="card__rotating-container">\n          <div class="card__front-side">JS</div>\n          <div class="card__back-side" style="background-image: url(').concat(s,')"></div>\n        </div>\n      </div>\n    ').replace(/(\n| {2,})/g,"");this._$root=function(e){const t=document.createElement("template");return t.innerHTML=e.trim(),t.content.firstChild}(a),this._$root.addEventListener("click",this),e((()=>{this._$root.dispatchEvent(new CustomEvent("event:init",{detail:{card:this}}))}))}get kind(){return this._kind}get isOpen(){return this._isOpen}set isOpen(e){this._isOpen=e,this._$root.classList[this._isOpen?"add":"remove"]("card_open"),this._$root.dispatchEvent(new CustomEvent("event:change",{detail:{card:this}}))}get rootElement(){return this._$root}render(e){e.appendChild(this._$root)}handleEvent(e){"click"===e.type&&this.heandleClick()}heandleClick(){this._$root.dispatchEvent(new CustomEvent("event:click",{detail:{card:this}}))}}class r{constructor(t){let{items:n}=t;this._$root=document.createElement("div"),this._$root.classList.add("cards"),this._cards=n.map((e=>new s(e))),this._cards.forEach((e=>{e.rootElement.addEventListener("event:click",(()=>{this.handleClick(e)})),e.rootElement.addEventListener("event:change",(()=>{this.handleChange(e)})),e.render(this._$root)})),e((()=>{this._$root.dispatchEvent(new CustomEvent("event:init",{detail:{cards:[...this._cards]}}))}))}get rootElement(){return this._$root}render(e){e.appendChild(this._$root)}handleClick(e){this._$root.dispatchEvent(new CustomEvent("event:click",{detail:{cards:[...this._cards],card:e}}))}handleChange(e){this._$root.dispatchEvent(new CustomEvent("event:change",{detail:{cards:[...this._cards],card:e}}))}}const a=["adonis","after","agilityjs","alembic","alpaca","ampersand","amplitude","angular-meteor","angular2","angularjs","animejs","anychartjs","appium","appraise","ariatemplates","artillery","assemble","async","atmajs","atom","aura","aurelia","autobahnjs","autoprefixer","awaity.js","babel","babylonjs","backbone","backpack","bacon.js","barba.js","base","batmanjs","billboard.js","blaze_css","blendid","bliss","bluebird","bobril","bookshelf.js","bootstrap","bosket","bosonic","botpress","bower","brackets","breakdance","britecharts","brocolli","browserify","brunch","buster","butternut","cabbie","canjs","caporal","cappuccino","carbon","cell","cerebral","cesium","chai","chaplin","chartist","chartjs","charts","clementine","codecept","codeclimate","coffeescript","commonjs","cordova","create-component-app","createjs","critical","cujojs","cyclejs","cyclow","cypress","cytoscape","d3","dc","deku","delorean","derbyjs","dhtmlx","dio","discharge","displayjs","docsify","dojo","donejs","downshift","draggable","dragula","duel","duo","durandal","dutier","echarts","echojs","egg","electrode","electron","elm","emailjs","ember","emotion","ender","enquirer","enyo","epoch","es6","eslint","esnext","expressjs","extjs","fakerjs","falcon","falcor","fastify","firebase","fkill","flight","flow","flux","fly","foam","foundation","gatsby","generact","generate","gitpoint","glamorous","glimmer","globalize","gnosisjs","gpu.js","graphicsjs","graphqlcss","greensock","grunt","gulp","gun","gwt","handlebars","handsontable","hapi","haul","highcharts","holmes","howlerjs","hybrids","hygen","hyper","hyperapp","immutable","inferno","inquirerjs","insomnia","interledgerjs","intern","ionic","istanbul","jasmine","jerryscript","jest","jquery","jquerymobile","jqueryui","js_of_ocaml","jsblocks","jsdom","jshint","jspm","jsrobot","jstransformer","jsweet","jsx","jumpsuit","junctions.js","kap","karma","kea","kendoui","keystone","knockout","konva","krakenjs","lass","leaflet","lerna","less","lighthouse","lodash","mailit","marionettejs","mark.js","markvis","materialize","matreshka","matter.js","mavo","meteor","metro","mewt","microbundle","mithril","mitt","mobx-state-tree","mobx","mocha","modernizr","mojs","moleculer","momentjs","moon","muuri","nativescript-angular","nativescript","nemo","nerv","nest","neutrino","next.js","nightwatch","nile.js","nivo","nodal","node-red","nodejs","nodemailer","nodemon","npm","nuclearjs","nuxt","offlinejs","omniscient","openui5","p5.js","parcel","passport","pell","pep","phantomjs","phaser","phenomic","phonegap","pixijs","pkg","plotly.js","polished","polka","polymer","popmotion","popper.js","postcss","posthtml","preact","prettier","primeng","prototype","protractor","puppeteer","purescript","purgecss","pyjs","q","quasar","qunit","ractivejs","radi","ramda","ran","rax","re-dom","react-cosmos","react-flight","react-imgpro","react-konva","react-move","react-primer","react-router","react-sight","react-sizes","react-slingshot","react-static","react-vt","react","reactide","reactopt","redbird","redux-saga","redux","redux_offline","rekit","relay","repatch","requirejs","revealjs","riot","rivets","rltm.js","rollupjs","rxdb","rxjs","sails","sammyjs","san","scotty.js","semantic-ui-react","semantic-ui","seneca","sentineljs","sentry","sequelize","server.js","sinon","sizzle","skatejs","skeljs","slate","slick","slim.js","slush","socketio","socketstream","sockette","spine","spirit","sproutcore","standardjs","stapesjs","stealjs","storybook","strapi","strman","strudel","styletron","stylus","sugar","svelte","svgr","swip","systemjs","tabris.js","tape","taskr","threejs","tinymce","titanium","toolkit","totaljs","totoro","tradeship","trails","turf","turnjs","typescript","ulid","umbrella","underscorejs","unfetch","unistore","unitjs","update","v8","vaadin","vant","verb","volo","vows","vue","vuetify.js","vulcan","vx","wakanda","wallaby.js","webgl","webix","webpack-monitor","webpack","webrx","webtorrent","weex-ui","whitestormjs","wijmo","winjs","wiretie","workbox","x-tag","xo","yalla","yarn","yeoman","yui","zangodb","zeptojs"];class i{constructor(s){let{items:[i,o]}=s;this._$root=document.createElement("div"),this._$root.classList.add("game"),this._$root.style.width="".concat(96*i+24*(i-1),"px");const c=Array.from({length:i*o/2},(()=>a[t(0,a.length-1)]));this._cards=new r({items:n([...c,...c]).map((e=>({kind:e})))}),this._cards.rootElement.addEventListener("event:click",(e=>{this.handleClick(e)})),this._cards.render(this._$root),this._canMove=!0,this._moveСounter=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return{get:()=>e,set(t){e=t},reset(){e=0},increment(){e+=1},decrement(){e-=1}}}(),this._unopenedСards=i*o,this._prevCard=null,this._startTime=null,e((()=>{this._$root.dispatchEvent(new CustomEvent("event:init"))}))}get rootElement(){return this._$root}render(e){e.appendChild(this._$root)}handleClick(e){if(this._canMove&&!e.detail.card.isOpen)if(null===this._startTime&&(this._startTime=(new Date).valueOf(),this._$root.dispatchEvent(new CustomEvent("event:start"))),e.detail.card.isOpen=!0,this._moveСounter.increment(),null!==this._prevCard){if(this._$root.classList.add("game_can-move_false"),this._canMove=!1,this._prevCard.kind===e.detail.card.kind)return this._unopenedСards-=2,this._unopenedСards<2?void this._$root.dispatchEvent(new CustomEvent("event:end",{detail:{count:this._moveСounter.get(),time:(new Date).valueOf()-this._startTime}})):(this._prevCard=null,this._$root.classList.remove("game_can-move_false"),void(this._canMove=!0));setTimeout((()=>{e.detail.card.isOpen=!1,this._prevCard.isOpen=!1,this._prevCard=null,this._$root.classList.remove("game_can-move_false"),this._canMove=!0}),900)}else this._prevCard=e.detail.card}}class o{constructor(e){this.getNamespace=()=>e}static isAvailable(){const e=Date.now().toString();try{return localStorage.setItem(e,e),localStorage.removeItem(e),!0}catch{return!1}}get(){try{const e=localStorage.getItem(this.getNamespace());return"string"==typeof e?JSON.parse(e):null}catch{return null}}set(e){try{return localStorage.setItem(this.getNamespace(),JSON.stringify(e)),!0}catch{return!1}}}const c=o.isAvailable()?new o("score"):null,l=document.querySelector(".header__score-link");if(!(l instanceof HTMLAnchorElement))throw new Error("Score link not found");l.addEventListener("click",(e=>{var t;e.preventDefault();const n=null!==(t=null==c?void 0:c.get())&&void 0!==t?t:[],s=document.createElement("dialog");s.classList.add("dialog"),s.style.cssText="\n    width: ".concat(264,"px;\n    padding-top: 24px;\n    padding-right: 24px;\n    padding-bottom: 24px;\n    padding-left: 24px;\n    border: 0;\n  "),s.innerHTML='\n    <h2 style="\n      margin-top: 0;\n      margin-bottom: 4px;\n      font-size: 20px;\n      font-weight: 400;\n      line-height: 32px;\n      text-align: left;\n      text-transform: uppercase;\n    ">\n      Score\n    </h2>\n  ',s.innerHTML+=0===n.length?"Empty":'\n        <table style="width: 100%; border-collapse: collapse;">\n          <thead>\n            <tr>\n              <th style="width: '.concat(100/3,'%; padding: 4px 8px; font-weight: 400; text-align: left;"></th>\n              <th style="width: ').concat(100/3,'%; padding: 4px 8px; font-weight: 400; text-align: left;">Count</th>\n              <th style="width: ').concat(100/3,'%; padding: 4px 8px; font-weight: 400; text-align: left;">Time</th>\n            </tr>\n          </thead>\n          <tbody>\n            ').concat(n.map(((e,t)=>{let{count:n,time:s}=e;const r=new Date(s),[a,i]=[r.getMinutes(),r.getSeconds()].map((e=>e.toString().padStart(2,"0").slice(-2)));return'\n                  <tr style="border-top: 1px solid; border-bottom: 1px solid;">\n                    <td style="padding: 4px 8px;">'.concat(t+1,'</td>\n                    <td style="padding: 4px 8px;">').concat(n,'</td>\n                    <td style="padding: 4px 8px;">').concat(a,":").concat(i,"</td>\n                  </tr>\n                ")})).join(""),'\n          </tbody>\n          <tfoot>\n            <tr>\n              <th style="padding: 4px 8px; font-weight: 400; text-align: left;"></th>\n              <th style="padding: 4px 8px; font-weight: 400; text-align: left;">Count</th>\n              <th style="padding: 4px 8px; font-weight: 400; text-align: left;">Time</th>\n            </tr>\n          </tfoot>\n        </table>\n      '),s.innerHTML+='\n    <div style="margin-top: 4px;">\n      <a href="#close-score" onclick = "\n        (() => document.querySelector(\'.dialog\').close())();\n        return false;\n      ">\n        Close\n      </a>\n    </div>\n  ',s.addEventListener("close",(()=>{document.body.removeChild(s)}),{once:!0}),document.body.appendChild(s),s.showModal()}));const d=document.querySelector(".main__game");if(!(d instanceof HTMLDivElement))throw new Error("Game container not found");let h;h=new i({items:[4,3]}),h.rootElement.addEventListener("event:end",(function e(t){var n;const{count:s,time:r}=t.detail,a=null!==(n=null==c?void 0:c.get())&&void 0!==n?n:[];10===a.length&&a.shift(),a.push({count:s,time:r}),null==c||c.set(a),setTimeout((()=>{const t=new Date(r),[n,a]=[t.getMinutes(),t.getSeconds()].map((e=>e.toString().padStart(2,"0").slice(-2)));alert("Count: ".concat(s,". Time: ").concat(n,":").concat(a)),document.querySelectorAll(".card").forEach((e=>e.classList.remove("card_open"))),setTimeout((()=>{h.rootElement.removeEventListener("event:end",e),d.innerHTML="",h=new i({items:[4,3]}),h.rootElement.addEventListener("event:end",e),h.render(d)}),300)}),300)})),h.render(d)})();